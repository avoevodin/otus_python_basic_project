# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.10.5

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/topics/caching/
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip

stages:
  - lint
  - test
  - build
  - deploy

before_script:
  - python --version  # For debugging
  - pip install -U pip
  - pip install -r requirements/requirements-gl-ci.txt

lint:
  stage: lint
  image:
    name: registry.gitlab.com/pipeline-components/black:latest
    pull_policy: always
  script:
    - black --check --verbose -- .

test:
  stage: test
  services:
    - postgres:14-alpine
  variables:
    POSTGRES_DB: myshop
    POSTGRES_USER: myshop
    POSTGRES_PASSWORD: secret
    POSTGRES_HOST: postgres
    POSTGRES_PORT: 5432
    COVERAGE_DIR: "coverage-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
  needs:
    - lint
  script:
    - cd myshop
    - coverage run --source='.' manage.py test --verbosity=2
    - coverage xml -o coverage.xml
    - coverage html -d $COVERAGE_DIR
  artifacts:
    name: "coverage-report-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - $COVERAGE_DIR
    when: on_success
    expire_in: 1 week

test-echo:
  stage: test
  needs:
    - test
  script:
    - echo 'Tests have been completed'

build:
  stage: build
  script:
    - echo 'Build app'

deploy-remote:
  stage: deploy
  script:
    - echo "Deploy to remote..."
    - curl -X POST https://httpbin.org/post -d 'ci=$APP_ENV_CONFIG' -d "commit-sha=$CI_COMMIT_SHA"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
